
'use client';

import { useMemo } from 'react';
import { calculateTradePnL } from '@/utils/tradeCalculations';
import { formatCurrency, formatPnL } from '@/utils/formatCurrency';
import TradeForm from '@/components/TradeForm';
import TradeList from '@/components/TradeList';
import SummaryChart from '@/components/SummaryChart';
import CumulativeChart from '@/components/CumulativeChart';
import TradeProportionChart from '@/components/TradeProportionChart';
import PnLLineChart from '@/components/PnLLineChart';
import DetailedStatsCard from '@/components/DetailedStatsCard';
import AIAnalysis from '@/components/AIAnalysis';
import CapitalInput from '@/components/CapitalInput';
import DataManager from '@/components/DataManager';
import APIKeySettings from '@/components/APIKeySettings';
import { useTrades, useCapital, Trade } from '@/hooks/useLocalStorage';

export default function Home() {
  const { trades, addTrade, deleteTrade, clearAllTrades, importTrades, replaceAllTrades, statistics } = useTrades();
  const { baseCapital, updateCapital, setCapital } = useCapital();

  const totalCapital = baseCapital + statistics.totalPnl;

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö import ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const handleImportTrades = (importedTrades: Trade[]) => {
    if (window.confirm(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${importedTrades.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà`)) {
      importTrades(importedTrades);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏à‡∏≤‡∏Å backup
  const handleRestoreBackup = (backupData: { trades: Trade[], capital: number }) => {
    replaceAllTrades(backupData.trades);
    setCapital(backupData.capital);
  };

  return (
    <main className="min-h-screen bg-gray-950 p-2 sm:p-4 lg:p-8 text-white">
      <div className="mx-auto max-w-7xl rounded-xl bg-gray-900 p-4 sm:p-6 md:p-8 lg:p-10 shadow-2xl">
        <h2 className="mb-6 text-center text-lg sm:text-2xl lg:text-xl xl:text-xl font-extrabold tracking-tight text-yellow-400 flex items-center justify-center gap-3">
          <div className="flex items-center gap-2">
            <span className="text-2xl sm:text-3xl">üìä</span>
          </div>
          <span className="leading-tight">‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏≠‡∏á</span>
        </h2>
        
        {/* ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì */}
        <div className="mb-8 rounded-lg bg-blue-900/20 border border-blue-500/30 p-4">
          <div className="flex items-center gap-2 mb-2">
            <span className="text-blue-400">‚ÑπÔ∏è</span>
            <h3 className="text-base sm:text-lg font-semibold text-blue-400">‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥</h3>
          </div>
          <div className="text-xs sm:text-sm text-gray-300 space-y-1">
            <p>‚Ä¢ <strong>1 Lot</strong> = 100 ‡∏≠‡∏≠‡∏ô‡∏ã‡πå‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥</p>
            <p>‚Ä¢ <strong>‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô</strong> = (‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏≠‡∏Å - ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤) √ó ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Lot √ó 100 ‡∏≠‡∏≠‡∏ô‡∏ã‡πå</p>
            <p>‚Ä¢ <strong>‡∏£‡∏≤‡∏Ñ‡∏≤</strong> ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô USD ‡∏ï‡πà‡∏≠‡∏≠‡∏≠‡∏ô‡∏ã‡πå</p>
            <p>‚Ä¢ <strong>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</strong> Buy 0.1 lot ‡∏ó‡∏µ‡πà $2,000, ‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà $2,010 = ($2,010 - $2,000) √ó 0.1 √ó 100 = $100</p>
          </div>
        </div>
        
        <div className="flex flex-col gap-6 lg:gap-8">
          <CapitalInput
            initialCapital={baseCapital}
            onUpdateCapital={updateCapital}
          />

          {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
          <div className="rounded-xl bg-gray-800 p-4 sm:p-6 shadow-lg">
            <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-4">
              <h2 className="text-xl sm:text-2xl font-bold text-white">‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏ß‡∏°</h2>
              {trades.length > 0 && (
                <button
                  onClick={clearAllTrades}
                  className="rounded-lg bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-md transition duration-300 ease-in-out hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-75 w-full sm:w-auto"
                >
                  ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                </button>
              )}
            </div>

            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</p>
                <p className="text-lg sm:text-xl font-bold text-yellow-400">
                  {formatCurrency(baseCapital)}
                </p>
              </div>

              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°</p>
                <p
                  className={`text-lg sm:text-xl font-bold ${
                    statistics.totalPnl >= 0 ? "text-green-400" : "text-red-400"
                  }`}
                >
                  {formatPnL(statistics.totalPnl)}
                </p>
              </div>

              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏™‡∏∏‡∏ó‡∏ò‡∏¥</p>
                <p className="text-lg sm:text-xl font-bold text-yellow-400">
                  {formatCurrency(totalCapital)}
                </p>
              </div>

              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                <p className="text-lg sm:text-xl font-bold text-blue-400">
                  {statistics.totalTrades}
                </p>
              </div>

              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡πÑ‡∏£</p>
                <p className="text-lg sm:text-xl font-bold text-green-400">
                  {statistics.winningTrades}
                </p>
              </div>

              <div className="bg-gray-700 rounded-lg p-4">
                <p className="text-sm text-gray-400">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ä‡∏ô‡∏∞</p>
                <p className="text-lg sm:text-xl font-bold text-purple-400">
                  {statistics.winRate.toFixed(1)}%
                </p>
              </div>
            </div>
          </div>

          {/* ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
          <DataManager
            trades={trades}
            capital={baseCapital}
            onImportTrades={handleImportTrades}
            onRestoreBackup={handleRestoreBackup}
          />

          <TradeForm onAddTrade={addTrade} />

          {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏ï‡πà‡∏≤‡∏á‡πÜ */}
          <div className="grid grid-cols-1 xl:grid-cols-2 gap-6 lg:gap-8">
            <SummaryChart trades={trades} />
            <CumulativeChart trades={trades} />
          </div>

          {/* ‡∏Å‡∏£‡∏≤‡∏ü Line Chart ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà */}
          <PnLLineChart trades={trades} />

          {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î */}
          <TradeProportionChart trades={trades} />

          {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å */}
          <DetailedStatsCard trades={trades} />

          {/* ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key */}
          <APIKeySettings />
          
          {/* ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå AI */}
          <AIAnalysis trades={trades} capital={baseCapital} />

          <TradeList trades={trades} onDeleteTrade={deleteTrade} />
        </div>
      </div>
    </main>
  );
}
